name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Install addlicense
      run: go install github.com/google/addlicense@latest

    - name: Run tests
      run: make test

    - name: Run linter
      if: matrix.go-version == '1.23'
      run: |
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        make lint

    - name: Check formatting
      run: |
        gofmt -l .
        test -z "$(gofmt -l .)"

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Install addlicense
      run: go install github.com/google/addlicense@latest

    - name: Build binary
      run: make build

    - name: Build for all platforms
      run: make build-all

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: build/
        retention-days: 7

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Install addlicense
      run: go install github.com/google/addlicense@latest

    - name: Run tests with coverage
      run: make test-coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false